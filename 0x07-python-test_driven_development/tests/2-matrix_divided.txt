Import module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Success case:
     >>> matrix = [[1, 2, 3], [4, 5, 6]]
     >>> print(matrix_divided(matrix, 3))
     [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Failed cases:
     >>> matrix = [[1, 2, 3], [4, 5, 'h']]
     >>> print(matrix_divided(matrix, 3))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> print(matrix_divided(None, 2))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> print(matrix_divided(None, None))
     Traceback (most recent call last):
     ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats

     >>> matrix = [[1, 2, 3], [4, 5, 6]]
     >>> print(matrix_divided(matrix, 0))
     Traceback (most recent call last):
     ...
     ZeroDivisionError: division by zero

     >>> matrix = [[1, 2, 3], [4, 5, 6]]
     >>> print(matrix_divided(matrix, 'h'))
     Traceback (most recent call last):
     ...
     TypeError: div must be a number

     >>> matrix = [[1, 2, 3], [4, 5]]
     >>> print(matrix_divided(matrix, 3))
     Traceback (most recent call last):
     ...
     TypeError: Each row of the matrix must have the same size

     >>> matrix = [[1, 2, 3], [4, 5, 6]]
     >>> print(matrix_divided(matrix, float("inf")))
     [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
